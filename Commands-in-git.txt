git status #show the current status of repository

git add . #производится индексирование файлов на предмет изменения в них

git commit -m "update" #фиксируем публикацию, комментируем изменения

git push -f #отправляем на сервер GitHub

mkdir C:/develop/ #cоздаем папку на диске C (если Windows)

git clone https://github.com/user/titlerepository # копируем свой репозиторий на компьютер

cd titlerepository/ #заходим в локальный репозиторий

git log #просмотр истории изменений (примечание: когда очень большой список изменений, для выхода нужно нажать клавишу "q")

git help <command we need> #помощь, вывести инцформацию о какой-нибудь интересующей нас команде

git log --pretty=format:"%h - %an, %ar : %s" #"%h" - вывести сокращенный хэш, "%an" - вывести пользователя, "%ar" - когда было сделано изменение и "%s"  - коментарий
 
git log --since=2.weeks #показать коммиты за последние 2 недели

git log -p -2 #выводит конкретизированную информацию об изменениях в файлах

git mv <source> <destination> #Перенести или переименовать файл / каталог

git config --global core.editor "'C:\Program Files (x86)\Notepad++\notepad++.exe' -multiInst -notabbar -nosession -noPlugin" #установка редактора файлов по умолчанию

git checkout -b <new branch name> #создание новой ветки с именем и сразу переключаемся на нее

git branch #выводит список веток и показывает на какой мы сейчас находимся

git branch -v #показывает последние комментарии в коммитах веток

git branch <new branch name> #создание новой ветки с именем без переключения на нее

git checkout <branch name> #переключаемся на ветку с указаным именем

git merge <branch name> #слияние текущей ветки с указанной

git config --global mergetool.kdiff3.cmd '"c:\\Program Files (x86)\\KDiff3\\kdiff3" $BASE $LOCAL $REMOTE -o $MERGED' #устанавливаем утилиту для разрешения конфликтов при слиянии kdiff3 по умолчанию

git mergetool #вызываем утилиту для разрешения конфлитка при слиянии




